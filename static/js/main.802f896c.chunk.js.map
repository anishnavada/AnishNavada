{"version":3,"sources":["Components/Navbar.js","Components/Experiences.js","Components/Home.js","Components/Projects.js","Components/Education.js","App.js","serviceWorker.js","index.js"],"names":["Navbar","className","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","to","id","React","Component","Experiences","Home","Projects","href","Education","App","path","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"iRA+BeA,E,iLAxBb,OACC,yBAAKC,UAAU,uCACR,4BAAQA,UAAU,iBAAiBC,KAAK,SAASC,cAAY,WAAWC,cAAY,uBAAuBC,gBAAc,sBAAsBC,gBAAc,QAAQC,aAAW,qBAC9K,0BAAMN,UAAU,yBAElB,kBAAC,IAAD,CAAMO,GAAG,iBAAgB,0BAAMP,UAAU,gBAAhB,iBACzB,yBAAKA,UAAU,2BAA2BQ,GAAG,uBAC3C,wBAAIR,UAAU,gCACZ,wBAAIA,UAAU,YACZ,kBAAC,IAAD,CAAMA,UAAY,WAAWO,GAAG,gBAAhC,oBAEF,wBAAIP,UAAU,YACZ,kBAAC,IAAD,CAAMA,UAAY,WAAWO,GAAG,aAAhC,iBAEF,wBAAIP,UAAU,YACZ,kBAAC,IAAD,CAAMA,UAAY,WAAWO,GAAG,cAAhC,yB,GAjBKE,IAAMC,WCOZC,E,iLANb,OACC,iD,GAHuBF,IAAMC,WCQjBE,E,iLANb,OACC,0C,GAHgBH,IAAMC,WCWVG,E,iLATb,OACC,6BACC,wCACA,uBAAGC,KAAK,8CAA6C,oD,GALlCL,IAAMC,WCQdK,E,iLANb,OACC,+C,GAHqBN,IAAMC,W,gBCwBfM,E,iLAhBb,OACC,kBAAC,IAAD,KACC,6BACC,kBAAC,EAAD,MACA,kBAAC,IAAD,KACC,kBAAC,IAAD,CAAOC,KAAK,eAAeC,UAAWP,IACtC,kBAAC,IAAD,CAAOM,KAAK,YAAYC,UAAWL,IACnC,kBAAC,IAAD,CAAOI,KAAK,aAAaC,UAAWH,IACpC,kBAAC,IAAD,CAAOE,KAAK,IAAIC,UAAWN,W,GAVfH,IAAMC,WCEJS,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,MCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC,iB","file":"static/js/main.802f896c.chunk.js","sourcesContent":["import React from 'react';\nimport '../Styles.css';\nimport { Link } from \"react-router-dom\" \n\n\nclass Navbar extends React.Component{\n\trender(){\n\t\treturn (\n\t\t\t<nav className=\"navbar navbar-expand-lg navbar-dark\">\n\t\t        <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarTogglerDemo01\" aria-controls=\"navbarTogglerDemo01\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n\t\t          <span className=\"navbar-toggler-icon\"></span>\n\t\t        </button>\n\t\t        <Link to=\"/AnishNavada/\"><span className=\"navbar-brand\">Anish Navada</span></Link>\n\t\t        <div className=\"collapse navbar-collapse\" id=\"navbarTogglerDemo01\">\n\t\t          <ul className=\"nav navbar-nav navbar-center\">\n\t\t            <li className=\"nav-item\">\n\t\t              <Link className = \"nav-link\" to=\"/Experiences\"> My Experiences</Link>\n\t\t            </li>\n\t\t            <li className=\"nav-item\">\n\t\t              <Link className = \"nav-link\" to=\"/Projects\"> My Projects</Link>\n\t\t            </li>\n\t\t            <li className=\"nav-item\">\n\t\t              <Link className = \"nav-link\" to=\"/Education\"> My Education</Link>\n\t\t            </li>\n\t\t          </ul>\n\t\t        </div>\n\t      </nav>\n\t\t)\n\t}\n}\n\nexport default Navbar;\n","import React from 'react';\nimport '../Styles.css';\n\n\nclass Experiences extends React.Component{\n\trender(){\n\t\treturn (\n\t\t\t<h1> EXPERIENCES </h1>\n\t\t)\n\t}\n}\n\nexport default Experiences;\n","import React from 'react';\nimport '../Styles.css';\n\n\nclass Home extends React.Component{\n\trender(){\n\t\treturn (\n\t\t\t<h1> HOME </h1>\n\t\t)\n\t}\n}\n\nexport default Home;\n","import React from 'react';\nimport '../Styles.css';\nimport { Link } from \"react-router-dom\" \n\nclass Projects extends React.Component{\n\trender(){\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<h1>PROJECTS</h1>\n\t\t\t\t<a href=\"http://anishnavada.github.io/PlayerCompare\"><h2>Player Compare</h2></a>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport default Projects;\n","import React from 'react';\nimport '../Styles.css';\n\n\nclass Education extends React.Component{\n\trender(){\n\t\treturn (\n\t\t\t<h1> EDUCATION </h1>\n\t\t)\n\t}\n}\n\nexport default Education;\n","import React from 'react';\nimport './Styles.css';\nimport Navbar from './Components/Navbar'\nimport Experiences from './Components/Experiences'\nimport Home from './Components/Home'\nimport Projects from './Components/Projects'\nimport Education from './Components/Education'\nimport 'bootstrap';\nimport { Switch, Route, BrowserRouter as Router } from 'react-router-dom'\n\nclass App extends React.Component{\n\trender(){\n\t\treturn (\n\t\t\t<Router>\n\t\t\t\t<div>\n\t\t\t\t\t<Navbar />\n\t\t\t\t\t<Switch>\n\t\t\t\t\t\t<Route path=\"/Experiences\" component={Experiences} /> \n\t\t\t\t\t\t<Route path=\"/Projects\" component={Projects} /> \n\t\t\t\t\t\t<Route path=\"/Education\" component={Education} /> \n\t\t\t\t\t\t<Route path=\"/\" component={Home} /> \n\t\t\t\t\t</Switch>\n\t\t\t\t</div>\n\t\t\t</Router>\n\t\t)\n\t}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport Bootstrap from \"bootstrap/dist/css/bootstrap.css\"\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}